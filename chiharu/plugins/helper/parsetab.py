
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "expressionleftDEFINEright:leftORleftANDright!nonassocEQNEQLEGE<>left+-left*/left^rightUMINUSAND DEFINE EQ GE ID LE NEQ NUMBER OR SUMexpression : expression '+' expression\n                      | expression '-' expression\n                      | expression '*' expression\n                      | expression '/' expression\n                      | expression '^' expressionlogic : expression EQ expression\n                | expression NEQ expression\n                | expression LE expression\n                | expression GE expression\n                | expression '<' expression\n                | expression '>' expression\n                | logic AND logic\n                | logic OR logiclogic : '!' logicexpression : '-' expression    %prec UMINUSexpression : logic '?' expression ':' expressionexpression : '(' expression ')'\n           logic : '(' logic ')'expression : IDexpression : NUMBERexpression : ID '(' list ')'expression : SUM '[' ID ']' seen_sum '(' list ')'seen_sum : expression : ID DEFINE expressionlist : expression\n                | expression ',' list"
    
_lr_action_items = {'-':([0,1,2,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,54,55,56,58,61,63,],[2,10,2,2,-19,-20,2,2,2,2,2,2,2,2,2,2,2,2,-15,2,2,2,10,2,2,10,2,-1,-2,-3,-4,-5,10,10,10,10,10,10,10,-17,10,10,10,2,-21,2,10,2,-22,]),'(':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,31,54,56,57,60,61,],[4,4,4,26,31,4,4,4,4,4,4,4,4,4,4,4,4,31,31,4,4,31,4,4,-23,61,4,]),'ID':([0,2,4,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,28,31,54,56,61,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,51,5,5,5,5,]),'NUMBER':([0,2,4,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,31,54,56,61,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'SUM':([0,2,4,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,31,54,56,61,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'!':([0,2,4,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,31,54,56,61,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,5,6,20,32,33,34,35,36,46,50,55,58,63,],[0,-19,-20,-15,-1,-2,-3,-4,-5,-17,-24,-21,-16,-22,]),'+':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[9,-19,-20,-15,9,9,-1,-2,-3,-4,-5,9,9,9,9,9,9,9,-17,9,9,9,-21,9,-22,]),'*':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[11,-19,-20,-15,11,11,11,11,-3,-4,-5,11,11,11,11,11,11,11,-17,11,11,11,-21,11,-22,]),'/':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[12,-19,-20,-15,12,12,12,12,-3,-4,-5,12,12,12,12,12,12,12,-17,12,12,12,-21,12,-22,]),'^':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[13,-19,-20,-15,13,13,13,13,13,13,-5,13,13,13,13,13,13,13,-17,13,13,13,-21,13,-22,]),'EQ':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[14,-19,-20,-15,14,14,-1,-2,-3,-4,-5,14,14,14,14,14,14,14,-17,14,14,14,-21,14,-22,]),'NEQ':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[15,-19,-20,-15,15,15,-1,-2,-3,-4,-5,15,15,15,15,15,15,15,-17,15,15,15,-21,15,-22,]),'LE':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[16,-19,-20,-15,16,16,-1,-2,-3,-4,-5,16,16,16,16,16,16,16,-17,16,16,16,-21,16,-22,]),'GE':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[17,-19,-20,-15,17,17,-1,-2,-3,-4,-5,17,17,17,17,17,17,17,-17,17,17,17,-21,17,-22,]),'<':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[18,-19,-20,-15,18,18,-1,-2,-3,-4,-5,18,18,18,18,18,18,18,-17,18,18,18,-21,18,-22,]),'>':([1,5,6,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,46,49,50,53,55,58,63,],[19,-19,-20,-15,19,19,-1,-2,-3,-4,-5,19,19,19,19,19,19,19,-17,19,19,19,-21,19,-22,]),'?':([3,5,6,20,25,29,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,50,52,55,58,63,],[21,-19,-20,-15,21,-14,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-24,21,-21,-16,-22,]),'AND':([3,5,6,20,25,29,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,50,52,55,58,63,],[22,-19,-20,-15,22,-14,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,22,-17,-18,-24,22,-21,-16,-22,]),'OR':([3,5,6,20,25,29,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,50,52,55,58,63,],[23,-19,-20,-15,23,-14,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,-24,23,-21,-16,-22,]),')':([5,6,20,24,25,29,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,55,58,59,62,63,],[-19,-20,-15,46,47,-14,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-17,-18,55,-25,-24,47,46,-21,-16,-26,63,-22,]),':':([5,6,20,32,33,34,35,36,43,46,50,55,58,63,],[-19,-20,-15,-1,-2,-3,-4,-5,54,-17,-24,-21,-16,-22,]),',':([5,6,20,32,33,34,35,36,46,49,50,55,58,63,],[-19,-20,-15,-1,-2,-3,-4,-5,-17,56,-24,-21,-16,-22,]),'DEFINE':([5,],[27,]),'[':([7,],[28,]),']':([51,],[57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,4,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,31,54,56,61,],[1,20,24,30,32,33,34,35,36,37,38,39,40,41,42,43,30,30,49,50,53,58,49,49,]),'logic':([0,2,4,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,26,27,31,54,56,61,],[3,3,25,29,3,3,3,3,3,3,3,3,3,3,3,3,44,45,3,3,52,3,3,3,]),'list':([26,56,61,],[48,59,62,]),'seen_sum':([57,],[60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression + expression','expression',3,'p_binary_operator','function.py',90),
  ('expression -> expression - expression','expression',3,'p_binary_operator','function.py',91),
  ('expression -> expression * expression','expression',3,'p_binary_operator','function.py',92),
  ('expression -> expression / expression','expression',3,'p_binary_operator','function.py',93),
  ('expression -> expression ^ expression','expression',3,'p_binary_operator','function.py',94),
  ('logic -> expression EQ expression','logic',3,'p_logic_operator','function.py',97),
  ('logic -> expression NEQ expression','logic',3,'p_logic_operator','function.py',98),
  ('logic -> expression LE expression','logic',3,'p_logic_operator','function.py',99),
  ('logic -> expression GE expression','logic',3,'p_logic_operator','function.py',100),
  ('logic -> expression < expression','logic',3,'p_logic_operator','function.py',101),
  ('logic -> expression > expression','logic',3,'p_logic_operator','function.py',102),
  ('logic -> logic AND logic','logic',3,'p_logic_operator','function.py',103),
  ('logic -> logic OR logic','logic',3,'p_logic_operator','function.py',104),
  ('logic -> ! logic','logic',2,'p_logic_unary_operator','function.py',107),
  ('expression -> - expression','expression',2,'p_unary_operator','function.py',110),
  ('expression -> logic ? expression : expression','expression',5,'p_whether','function.py',113),
  ('expression -> ( expression )','expression',3,'p_paren','function.py',116),
  ('logic -> ( logic )','logic',3,'p_paren','function.py',117),
  ('expression -> ID','expression',1,'p_id','function.py',120),
  ('expression -> NUMBER','expression',1,'p_number','function.py',147),
  ('expression -> ID ( list )','expression',4,'p_function','function.py',150),
  ('expression -> SUM [ ID ] seen_sum ( list )','expression',8,'p_sum','function.py',155),
  ('seen_sum -> <empty>','seen_sum',0,'p_seen_sum','function.py',174),
  ('expression -> ID DEFINE expression','expression',3,'p_define','function.py',179),
  ('list -> expression','list',1,'p_list','function.py',185),
  ('list -> expression , list','list',3,'p_list','function.py',186),
]
